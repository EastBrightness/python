class 학생:
    이름 = ''
    번호 = 0
    키 = 0.0

    def __init__(self, 이름, 번호, 키):
        self.이름 = 이름
        self.번호 = 번호
        self.키 = 키 

    def 학생정보보기(self):
        print(f'이름: {self.이름}, 번호: {self.번호}, 키: {self.키}')

    def 학생정보입력(self, 이름, 번호, 키):
        self.이름 = 이름
        self.번호 = 번호
        self.키 = 키

class 학생2:
    이름 = ''
    번호 = 0
    키 = 0.0

    def __init__(self, 이름, 번호, 키):
        self.이름 = 이름
        self.번호 = 번호
        self.키 = 키
        # 생성자(변수) 가 생성될 때 바로 사용되는 함수

    # 예를 들어, 이 메서드가 버그가 있어서 수정해야할 경우!
    def 학생정보보기(self):
        print(f'이름: {self.이름}, 번호: {self.번호}, 키: {self.키}')

    def 학생정보입력(self, 이름, 번호, 키):
        self.이름 = 이름
        self.번호 = 번호
        self.키 = 키

    def __del__(self):
        # 소멸자 : 객체(변수) 가 없어질 때 사용되는 함수
        print('프로그램 종료')
    
# 다른 사람이 '학생' 클래스를 사용하면,
# 클래스 업데이트 요청을 받을수가 있을 것임.
 
# 근데? 난 몸무게를 넣고싶어요~ 하면 학생()도 바꾸고, 학생2()도 바꾸고, 아주 골치아파짐.
# 상속 : 사람이 복붙을 하면 사람이 고쳐야하기 떄문에, 컴퓨터가 복붙을 해서 컴퓨터가 고치게한다. (클래스복붙)
class 학생2(학생):
    # 학생 클래스의 변수와 메서드를 복붙
    def __del__(self):
        print('프로그램 종료')

a = 학생2('철수', 1, 177.7, 80.0)
a.학생정보보기()